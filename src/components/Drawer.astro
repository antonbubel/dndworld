---
import {
  Menu,
  Earth,
  Github,
  UsersRound,
  PawPrint,
  LibraryBig,
  Zap,
  NotebookText,
} from "lucide-astro";

import Swords from "./icons/Swords.astro";
import ThemeController from "./ThemeController.astro";
import { getPageHierarchy } from "../page-hierarchy";

const pageHierarchy = await getPageHierarchy();
---

<style>
  #nav li {
    word-break: break-word;
    overflow-wrap: break-word;
  }
</style>

<div class="drawer lg:drawer-open drawer-auto-gutter">
  <input id="drawer" type="checkbox" class="drawer-toggle" />
  <div class="drawer-content">
    <!-- Open drawer control for small screens -->
    <label
      for="drawer"
      class="fixed right-4 top-6 z-20 p-0 btn w-12 h-5 shadow-none border-none hover:bg-base-200/30 bg-base-100/30 backdrop-blur-[1px] lg:hidden"
    >
      <Menu class="text-base" width={20} />
    </label>

    <!-- Page content here -->
    <slot />
  </div>
  <div class="drawer-side">
    <!-- Drawer overlay -->
    <label for="drawer" aria-label="close sidebar" class="drawer-overlay"
    ></label>

    <!-- Sidebar content here -->
    <div
      class="px-4 py-6 w-screen lg:w-80 min-h-full bg-base-200 text-base-content flex flex-col gap-4"
    >
      <ul class="menu p-0">
        <li>
          <a href="/" class="prose flex items-center gap-2">
            <Swords class="w-8" />
            <h2 class="font-serif m-0 text-4xl active:text-neutral-content">
              D&D Wiki
            </h2>
          </a>
        </li>
      </ul>

      <ul
        id="nav"
        transition:persist
        class="flex-auto menu menu-sm p-0 relative"
      >
        <li>
          <details>
            <summary class="flex"><Earth /> Мир </summary>
            <ul>
              <li>
                <a aria-label="Общая информация о мире" href="/world"
                  >Общая информация</a
                >
              </li>
              <li><a href="/world/map">Карта мира </a></li>
              <li>
                <details>
                  <summary>Регионы</summary>
                  <ul>
                    {
                      pageHierarchy.regions.map((region) => (
                        <li>
                          {region.cities.length > 0 ||
                          region.tribes.length > 0 ? (
                            <details>
                              <summary>{region.title}</summary>

                              <ul>
                                <li>
                                  <a
                                    aria-label={`${region.title} - Описание региона`}
                                    href={region.href}
                                  >
                                    Описание региона
                                  </a>
                                </li>
                                {region.cities.length > 0 && (
                                  <li>
                                    <details>
                                      <summary>Города</summary>
                                      <ul>
                                        {region.cities?.map((city) => (
                                          <li>
                                            <a
                                              aria-label={`${region.title} - ${city.title}`}
                                              href={city.href}
                                            >
                                              {city.title}
                                            </a>
                                          </li>
                                        ))}
                                      </ul>
                                    </details>
                                  </li>
                                )}
                                {region.tribes.length > 0 && (
                                  <li>
                                    <details>
                                      <summary>Племена</summary>
                                      <ul>
                                        {region.tribes?.map((tribe) => (
                                          <li>
                                            <a
                                              aria-label={`${region.title} - ${tribe.title}`}
                                              href={tribe.href}
                                            >
                                              {tribe.title}
                                            </a>
                                          </li>
                                        ))}
                                      </ul>
                                    </details>
                                  </li>
                                )}
                              </ul>
                            </details>
                          ) : (
                            <a href={region.href}>{region.title}</a>
                          )}
                        </li>
                      ))
                    }
                  </ul>
                </details>
              </li>
            </ul>
          </details>
        </li>
        <li>
          <a href="/pantheon"><Zap /> Божества </a>
        </li>
        <li>
          <a href="/population"><UsersRound /> Население </a>
        </li>
        <li>
          <a href="/bestiary"><PawPrint /> Бестиарий </a>
        </li>
        <li>
          <details>
            <summary><LibraryBig /> Легенды</summary>
            <ul>
              <li>
                <a href="/legends">Хронология</a>
              </li>
              <li>
                <details>
                  <summary>Легенды мира</summary>
                  <ul>
                    {
                      pageHierarchy.legends.map((legend) => (
                        <li>
                          <a href={legend.href}>
                            {legend.title}
                          </a>
                        </li>
                      ))
                    }
                  </ul>
                </details>
              </li>
            </ul>
          </details>
          <li>
            <a href="/journal"
              ><NotebookText /> <span class="italic">Журнал</span>
            </a>
          </li>
        </li>
      </ul>

      <div class="mt-4">
        <ThemeController />
        <div class="divider"></div>
        <div class="prose-sm flex gap-2">
          <p>Found an issue?</p>
          <a
            class="underline flex gap-2"
            href="https://github.com/antonbubel/dndworld"
            target="_blank"
            >Edit on GitHub
            <Github size={20} /></a
          >
        </div>
      </div>
    </div>
  </div>

  <script>
    function openActiveTree() {
      const activeLink = document.querySelector("#nav a.active");
      const navElement = document.querySelector("#nav");

      if (activeLink) {
        openClosedDetails(activeLink, navElement);
      }
    }

    function openClosedDetails(
      childElement: Element,
      stopElement: Element | null = null
    ) {
      const parentElement = childElement.parentElement;

      if (parentElement && parentElement !== stopElement) {
        if (parentElement.tagName === "DETAILS") {
          const detailsElement = parentElement as HTMLDetailsElement;
          detailsElement.open = true;
        }

        openClosedDetails(parentElement);
      }
    }

    function setActiveLink() {
      const navLinks = document.querySelectorAll("#nav a");

      navLinks.forEach((link) => {
        const linkElement = link as HTMLAnchorElement;

        linkElement.classList.remove("active");

        if (window.location.pathname === linkElement.pathname) {
          link.classList.add("active");
        }
      });

      document.dispatchEvent(new Event("nav:active-link-set"));
    }

    setActiveLink();
    openActiveTree();

    document.addEventListener("astro:after-swap", () => {
      setActiveLink();
      openActiveTree();
    });
  </script>
</div>
